@using Infrastructure.ViewModels
@model TransactionDetailsInclude





<form asp-action="TransDetailCreate" asp-controller="TransDetailController" method="post">
    @Html.HiddenFor(p=>p.details.TransactionId)
    <div class="form-group">
        <label for="exampleInputEmail1">Quantity</label>
        <input class="form-control" aria-describedby="emailHelp" placeholder="Enter Transaction" asp-for="details.Quantity">
        <span asp-validation-for="details.Quantity"></span>
    </div>
    <div class="form-group">
        <label for="exampleInputEmail1">No Of Items</label>
        <input class="form-control" aria-describedby="emailHelp" placeholder="Enter Transaction" asp-for="details.NoOfItems">
        <span asp-validation-for="details.NoOfItems"></span>
    </div>

    <div class="form-group">
        <label for="exampleInputEmail1">Price</label>
        <input class="form-control" aria-describedby="emailHelp" placeholder="Enter Transaction" asp-for="details.Price">
        <span asp-validation-for="details.Price"></span>
    </div>
    <div class="form-group">
        <label for="exampleInputEmail1">Created date</label>
        <input class="form-control" aria-describedby="emailHelp" placeholder="Enter Transaction" asp-for="details.CreatedDate">
        <span asp-validation-for="details.CreatedDate"></span>
    </div>

    <div class="form-group">
        <label for="exampleInputEmail1">Material</label>
        <select class="form-control" asp-for="details.MaterialId">
            <option value="">Select Material</option>
            @if (Model.details.RawMaterials != null && Model.details.RawMaterials.Count() > 0)
            {
                foreach (var item in Model.details.RawMaterials)
                {
                    <option value="@item.MaterialId">@item.MaterialName</option>
                }
            }
        </select>
        <span asp-validation-for="details.MaterialId"></span>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>